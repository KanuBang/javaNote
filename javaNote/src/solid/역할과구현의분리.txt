역할과 구현으로 분리하자.
역할 = 인터페이스
구현 = 역할을 구현한 객체

테슬라, 벤츠, 아우디는 정해진 하나의 자동차 역할을 구현한다.
역할을 구현하는 방법은 다르더라도 역할의 목적은 항상 같기 때문에 통일성이 생긴다.
그렇기에 운전자(클라이언트)는 자동차라는 역할만 알면 차가 바뀌어도 큰 변화 없이 자동차를 운전할 수 있다.

예를 들자면, 자동차의 역할 중 '엑셀'은 자동차 브랜드마다 내부적으로 살짝 다르게 구현된다.
하지만, '엑셀'이 속도를 올리는 기능이라는 것은 변함이 없다.
그러므로, 운전자가 아우디를 타든 테슬라를 타든 새로운 것을 배울 필요 없이 '엑셀'을 사용할 수 있다.

역할과 구현 분리의 목적 -> 유연하고 변경이 용이하다 + 클라이언트 코드 변경 적다 + 확장이 쉽다 + 유지보수가 쉽다

